from bookmark_entity import Bookmark
from language_interactor import UkrainianLanguageInteractor
from presentation.ua_lang_presenter import UkrainianLanguagePresenter

ua_lang = UkrainianLanguageInteractor({
    'іменник': {
        'рід': {
            'чоловічий':
                ('хлопець', "потяг", "каменяр"),
            'жіночий':
                ('дівчина', "нехворощ", "любов"),
            'середній':
                ("життя", "почуття", "право", "місто", "місце", "прислів'я", "ягня"),
            'спільний':
                ("ледащо", "сирота", "нероба", "розбишака", "бідолаха", "староста")

        },
        'число': {
            'однина':
                ('хлопець', "дівчина", "життя", "почуття", "право", "місто", "місце", "прислів'я", "потяг", "ледащо",
                 "сирота", "нероба", "нехворощ", "любов"),
            'множина':
                ("потяги", "двері", "штани", "ножиці")
        },
        'відміна': {
            'перша':
                ("дівчина", "ледащо", "сирота", "нероба", "розбишака", "бідолаха", "староста"),
            'друга':
                ("хлопець", "потяг", "життя", "почуття", "право", "місто", "місце", "прислів'я", "каменяр"),
            'третя':
                ("нехворощ", "любов", "мати"),
            'четверта':
                ("ягня",)
        }
    },
    'числівник': {
        'за значенням': {
            "кількісний":
                ("п'ять", "двісті двадцять", "шість", "тридцять три", "сорок вісім"),
            "порядковий":
                ("четвертий", "сьомий", "десятий", "сто двадцять перший")
        }
    },
    'займенник': {
        'за значенням': {
            "власні (особові)":
                ("я", "ти", "він", "вона", "воно"),
            "зворотні":
                ("себе",),
            "питальні":
                ("що?", "хто?", "скільки?", "який?", "чий?" "котрий?"),
            "відносні":
                ("що", "хто", "скільки", "який", "чий" "котрий"),
            "присвійні":
                ("мій", "твій", "наш", "ваш", "його", "її", "їхній", "свій"),
            "вказівні":
                ("оцей", "сей", "той", "стільки", "такий", "отакий"),
            "означальні": ("весь", "всякий", "сам", "кожний", "самий", "інший"),
            "неозначені": ("абихто", "абищо", "будь-який", "скільки-небудь"),
            "заперечні": ("ніщо", "ніякий", "нічий", "аніхто", "аніщо", "аніякий")
        }
    },
    'дієслово': {
        'вид': {
            "доконаний":
                ("заробив", "перевів", "співають", "бажає"),
            "недоконаний":
                ("заробляв", "переводить", "співали", "бажала"),
        },
        'рід': {
            "чоловічий":
                ("працював",),
            "жіночий":
                ("працювала",),
            "середній":
                ("працювало",)
        },
        'число': {
            'однина':
                ("малював", "малювала", "малювало"),
            'множина':
                ("малювали",),
        },
        'спосіб': {
            'дійсний':
                ("працюю", "сказали", "летить", "прийде"),
            'умовний':
                ("ходила б", "вживав би", "поспішали б"),
            'наказовий':
                ("напишіть", "ходіймо", "хай зайде")
        },
        'час': {
            'минулий':
                ("знаходив", "знаходила", "знаходили", "працював", "працювала", "працювало"),
            'теперішній':
                ("знаходжу", "знаходимо", "знаходите"),
            'майбутній':
                ("знайду", "знайдемо")
        },
    }
})
presenter = UkrainianLanguagePresenter()


class Controller:

    def execute(self):
        command = input("> ")
        if command == 'help' or command == '"help"' or command == 'help()':
            self.__print_manual()
        elif 'new' in command:
            self.extend_dictionary()
            return
        elif 'edit' in command:
            self.edit_dictionary()
        else:
            self.__make_request(command)
        print()

    def __print_manual(self):
        print("Введіть слово, щоб подивитися характеристику.")
        print("При введені характеристики, програма виведе приклад слів.")
        print("Ключове слово \"new\" без лапок, щоб додати нові слова у словник.")
        print("Ключове слово \"edit\" без лапок, щоб відредагувати існуюче слово нові слова у словник.")

    def __make_request(self, command):
        try:
            presenter.print_properties(ua_lang.classify(command))
        except (KeyError, ValueError) as msg:
            presenter.error_messages.append(str(msg))
            try:
                presenter.print_words_as_examples(*ua_lang.get_examples(command))
                presenter.error_messages.clear()
            except (KeyError, ValueError) as msg:
                if str(msg) not in presenter.error_messages:
                    presenter.error_messages.append(str(msg))
                presenter.print_error()

    def extend_dictionary(self):
        part_of_speech = input('Введіть частину мови[прикметник]: ')
        category_name = input('Введіть за чим класифікувати слово[число]: ')
        property_name = input('Введіть до якої характеристики належить[множина]: ')

        print("Введіть слова розділені пробілом[зелена золотиста промениста неймовірна]")
        words = input(">>> ")

        print("Слова '{}' будуть додані до словника, частина мови — '{}', {} — {}."
              .format(words, part_of_speech, category_name, property_name))
        command = input("Підтвердити(так/ні): ")
        if command.lower() in ("так", "т", "y", "yes"):
            inp = {part_of_speech: {category_name: {property_name: tuple(words.split())}}}
            ua_lang.update(inp)
        else:
            print("Слово(а) не були додані до словника", words)

    def edit_dictionary(self):
        part_of_speech = input('Введіть частину мови[числівник]: ')
        category_name = input('Введіть за чим класифікувати слово[за значенням]: ')
        property_name = input('Введіть до якої характеристики належить[кількісний]: ')
        old_word = input("Введіть поточне слово[єдин]: ")
        new_word = input("Введіть нове слово[один]: ")
        print("Замінити слово '{}' на '{}'.".format(old_word, new_word))
        command = input("Підтвердити(так/ні): ")
        if command.lower() in ("так", "т", "y", "yes"):
            bm = Bookmark(part_of_speech, category_name, property_name)
            ua_lang.modify(bm, old_word, new_word)
        else:
            print("Скасовано")


